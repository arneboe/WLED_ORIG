[env:esp32_4MB_V4_M_CUSTOM]
extends = esp32_4MB_V4_M_base
build_flags = ${esp32_4MB_V4_M_base.build_flags}
  -D WLED_RELEASE_NAME=esp32_4MB_V4_M_CUSTOM_DMX_ENABLED
  -D WLED_WATCHDOG_TIMEOUT=0 #-D WLED_DISABLE_BROWNOUT_DET
  #-D WLED_DISABLE_BROWNOUT_DET
  -D ARDUINO_USB_CDC_ON_BOOT=0 ; needed for arduino-esp32 >=2.0.4; avoids errors on startup
  -D WLED_DISABLE_LOXONE
  -D WLED_DISABLE_ALEXA
  -D WLED_DISABLE_HUESYNC
  -D WLED_DISABLE_MQTT
  -D WLED_DISABLE_INFRARED
  -D WLED_DISABLE_WEBSOCKETS
  -D WLED_DISABLE_AUDIO
  -D WLED_DISABLE_ADALIGHT
  -D ABL_MILLIAMPS_DEFAULT=5000
  -D DEFAULT_LED_COUNT=81
  -D LEDPIN=23
  -D WLED_DMX_INPUT_TX_PIN=17
  -D WLED_DMX_INPUT_RX_PIN=16
  -D WLED_DMX_INPUT_EN_PIN=21
  -D WLED_ENABLE_DMX_INPUT
  -D WLED_AP_SSID_UNIQUE
  -O2
  -std=gnu++17

build_unflags = ${common.build_unflags} -std=gnu++11 -DWLED_DEBUG -D USERMOD_AUDIOREACTIVE -D UM_AUDIOREACTIVE_USE_NEW_FFT -D WLED_ENABLE_MQTT -D USERMOD_FOUR_LINE_DISPLAY -D USERMOD_ARTIFX -D USERMOD_DALLASTEMPERATURE -D USERMOD_ROTARY_ENCODER_UI -D USERMOD_ANIMARTRIX


board_build.f_flash = 80000000L ; 80mhz causes errors on my chip?
board_build.flash_mode = qio ; (dio = dual i/o; more compatible than qio = quad i/o)
lib_ignore = IRremoteESP8266 ; use with WLED_DISABLE_INFRARED for faster compilation
debug_tool = esp-prog
upload_port = /dev/ttyUSB1
;upload_protocol = esp-prog
build_type = release



[env:esp32_4MB_V4_M_CUSTOM_debug]
extends = esp32_4MB_V4_S_base
build_flags = ${esp32_4MB_V4_S_base.build_flags}
  ${Debug_Flags.build_flags}
  -D CORE_DEBUG_LEVEL=2
  -D WLED_RELEASE_NAME=esp32_4MB_V4_S_CUSTOM_DMX_ENABLED_DEBUG
  -D WLED_WATCHDOG_TIMEOUT=0 #-D WLED_DISABLE_BROWNOUT_DET
  #-D WLED_DISABLE_BROWNOUT_DET
  -D ARDUINO_USB_CDC_ON_BOOT=0 ; needed for arduino-esp32 >=2.0.4; avoids errors on startup
  -D WLED_DISABLE_LOXONE
  -D WLED_DISABLE_ALEXA
  -D WLED_DISABLE_HUESYNC
  -D WLED_DISABLE_MQTT
  -D WLED_DISABLE_INFRARED
  -D WLED_DISABLE_WEBSOCKETS
  -D WLED_DISABLE_AUDIO
  -D WLED_DISABLE_ADALIGHT
  -DLEDPIN=23
 ; -D WLED_ENABLE_DMX_OUTPUT
 ; -D WLED_ENABLE_DMX
 -Os

debug_build_flags=  -Os

build_unflags = -DWLED_DEBUG -D USERMOD_DALLASTEMPERATURE -D USERMOD_FOUR_LINE_DISPLAY  -D USERMOD_ROTARY_ENCODER_UI -D SR_DEBUG -D USERMOD_ARTIFX -D USERMOD_AUDIOREACTIVE ${common.build_unflags} -D USERMOD_ANIMARTRIX -D CORE_DEBUG_LEVEL=0  -D USERMOD_AUDIOREACTIVE -D UM_AUDIOREACTIVE_USE_NEW_FFT -D WLED_ENABLE_DMX_INPUT  -D WLED_ENABLE_MQTT -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_TLS_MEM
debug_build_unflags = -DWLED_DEBUG -D USERMOD_DALLASTEMPERATURE -D USERMOD_FOUR_LINE_DISPLAY  -D USERMOD_ROTARY_ENCODER_UI -D SR_DEBUG -D USERMOD_ARTIFX -D USERMOD_AUDIOREACTIVE ${common.build_unflags} -D USERMOD_ANIMARTRIX -D CORE_DEBUG_LEVEL=0  -D USERMOD_AUDIOREACTIVE -D UM_AUDIOREACTIVE_USE_NEW_FFT -D WLED_ENABLE_DMX_INPUT  -D WLED_ENABLE_MQTT -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_TLS_MEM
monitor_filters = esp32_exception_decoder
board_build.f_flash = 80000000L ; 80mhz causes errors on my chip?
board_build.flash_mode = qio ; (dio = dual i/o; more compatible than qio = quad i/o)
lib_ignore = IRremoteESP8266 arduinoFFT ; use with WLED_DISABLE_INFRARED for faster compilation
debug_tool = esp-prog
upload_port = /dev/ttyUSB1
;upload_protocol = esp-prog
build_type=debug






[platformio]
default_envs = esp32_4MB_V4_M_CUSTOM
              ; esp32_4MB_V4_M_CUSTOM_debug

